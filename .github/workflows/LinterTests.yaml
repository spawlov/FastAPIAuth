name: Linters and Tests

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  linters_and_tests:
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        python-version: [ "3.11", "3.12" ]

    runs-on: ${{ matrix.os }}
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'poetry'

      - name: Install Poetry
        run: |
          pip install poetry==1.8.4

      - name: Configure Poetry
        run: |
          poetry config virtualenvs.in-project false
          poetry config virtualenvs.create true

      - name: Install dependencies
        run: |
          poetry add flake8 flake8-bugbear flake8-print flake8-builtins flake8-cognitive-complexity flake8-commas flake8-variables-names pep8-naming
          poetry add black isort
          poetry install --no-interaction --no-root

      - name: Run isort
        run: |
          poetry run isort --check .

      - name: Run flake8
        run: |
          poetry run flake8 --max-line-length=120

      - name: Run black
        run: |
          poetry run black --line-length=120 --check .
