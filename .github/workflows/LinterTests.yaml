name: Linters and Tests

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  linters_and_tests:
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        python-version: [ "3.11", "3.12", "3.13" ]

    runs-on: ${{ matrix.os }}
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          curl -sSL https://install.python-poetry.org | python3 - --version 1.8.4
          curl -sSL https://install.python-poetry.org | POETRY_VERSION=1.8.4 python3 -
          poetry config virtualenvs.in-project false
          poetry install --no-interaction
          poetry add flake8 flake8-bugbear flake8-print flake8-builtins flake8-cognitive-complexity flake8-commas flake8-variables-names pep8-naming        
          poetry add black
#          poetry add isort

#      - name: Run isort
#        run: isort --check .

#      - name: Run flake8
#        run: flake8 --max-line-length=120

      - name: Run black
        run: black --line-length=120 --check .
